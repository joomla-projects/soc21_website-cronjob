<?php
/**
 * Declares the MVC controller for CronjobModel.
 *
 * * : Model will implicitly default to CronjobModel through a call to getModel()
 *
 * TODO : Check if the controller needs more methods
 *
 * @package       Joomla.Administrator
 * @subpackage    com_cronjobs
 *
 * @copyright (C) 2021 Open Source Matters, Inc. <https://www.joomla.org>
 * @license       GPL v3
 */

namespace Joomla\Component\Cronjobs\Administrator\Controller;

// Restrict direct access
\defined('_JEXEC') or die;

use Joomla\CMS\MVC\Controller\FormController;

/**
 * The CronjobModel controller.
 *
 * @since __DEPLOY_VERSION__
 */
class CronjobController extends FormController
{
	/**
	 * Add a new record
	 *
	 * ! : Just acting as a proxy to the parent method at the moment
	 *     Due removal if no additional handling needed here ⚠
	 *
	 * @return boolean
	 *
	 * @since __DEPLOY_VERSION__
	 */
	public function add(): bool
	{
		// TODO: Change the autogenerated stub
		return parent::add();
	}

	/**
	 * Edit an existing record
	 *
	 * ! : Just acting as a proxy to the parent method atm
	 *     Due removal if no additional handling needed here ⚠
	 *
	 * @param   string  $key     Name of primary key from urlVar
	 * @param   string  $urlVar  Name of urlVar if different from primary key [?]
	 *
	 * @return boolean  True if access user has sufficient privileges
	 *
	 * @since __DEPLOY_VERSION__
	 */
	public function edit($key = null, $urlVar = null): bool
	{
		// TODO: Change the autogenerated stub
		return parent::edit($key, $urlVar);
	}

	/**
	 * Check if user has permissions to add an entry
	 *
	 * ! : Does nothing at the moment
	 *     Remove if no special handling required ⚠
	 *
	 * @param   array  $data  Array of input data
	 *
	 * @return boolean  True if user can add an entry
	 *
	 * @since __DEPLOY_VERSION__
	 */
	protected function allowAdd($data = array()): bool
	{
		// TODO: Change or remove
		return parent::allowAdd($data);
	}

	/**
	 * Check if user has the authority to edit an asset
	 *
	 * @param   array   $data  Array of input data
	 * @param   string  $key   Name of key for primary key, defaults to 'id'
	 *
	 * @return boolean True if user is allowed to edit record
	 *
	 * @since __DEPLOY_VERSION__
	 */
	protected function allowEdit($data = array(), $key = 'id'): bool
	{
		// Extract the recordId from $data, will come in handy
		$recordId = (int) $data[$key] ?? 0;

		/*
		 * Zero record (id:0), return component edit permission by calling parent controller method
		 * ? : Is this the right way to do this?
		*/
		if (!$recordId)
		{
			return parent::allowEdit($data, $key);
		}

		// TODO : Check if this is working as expected.
		return $this->app->getIdentity()->authorise('core.edit', 'com_cronjobs.cronjob.' . $recordId);

	}
}
